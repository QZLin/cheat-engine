name: Get Runner Info

on:
  workflow_dispatch:

jobs:
  get-paths:
    uses: ./.github/workflows/buildCE.yml
    with:
      info-only: true
  get-info:
    runs-on: windows-2022
    needs: get-paths
    steps:
      - name: Get VS2013 existing files
        id: vs2013-existing-files
        uses: actions/github-script@v7
        with:
          script: |
            const paths = [];
            const input = process.env.VS2013Paths.split("\n").map(s => s.replace(/^!\s+/, "!").trim()).filter(x => x !== "");
            const globber = await glob.create(input.join("\n"), { implicitDescendants: false });
            for await (const file of globber.globGenerator()) {
              paths.push(file.toString());
            }
            return paths.join("\n");
          result-encoding: string
        env:
          VS2013Paths: ${{ needs.get-paths.outputs.vs2013 }}
      - name: Write VS2013 existing files
        if: steps.vs2013-existing-files.outputs.result != 0
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: vs2013.txt
          contents: ${{ steps.vs2013-existing-files.outputs.result }}
      - name: Get XP existing files
        id: xp-existing-files
        uses: actions/github-script@v7
        with:
          script: |
            const paths = [];
            const input = process.env.XPPaths.split("\n").map(s => s.replace(/^!\s+/, "!").trim()).filter(x => x !== "");
            const globber = await glob.create(input.join("\n"), { implicitDescendants: false });
            for await (const file of globber.globGenerator()) {
              paths.push(file.toString());
            }
            return paths.join("\n");
          result-encoding: string
        env:
          XPPaths: ${{ needs.get-paths.outputs.xp }}
      - name: Write XP existing files
        if: steps.xp-existing-files.outputs.result != 0
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: xp.txt
          contents: ${{ steps.xp-existing-files.outputs.result }}
      - name: Install HoboCopy
        run: choco install hobocopy
      - name: Copy Registry
        run: |
          hobocopy C:\Windows\System32\config ${{ github.workspace }} SYSTEM SOFTWARE
          hobocopy C:\Users\runneradmin ${{ github.workspace }} NTUSER.DAT
      - uses: actions/upload-artifact@v3
        with:
          name: relevant-info
          path: |
            vs2013.txt
            xp.txt
            SYSTEM
            SOFTWARE
            NTUSER.DAT
